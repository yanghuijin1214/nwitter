{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","length","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","userObj","nowTime","Date","now","nowTime1","getFullYear","getMonth","getDate","getHours","parseInt","createdAt","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","displayName","Time","year","month","date","src","alt","cursor","open","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","Sendnweet","hour","minutes","getMinutes","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","reverse","marginTop","key","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","where","get","then","querySnapshot","forEach","catch","signOut","push","Navigation","location","href","indexOf","pfile","setPfile","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setISLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20bea66e.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n//보안을 위해서 key를 .env에 저장\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\n//database\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password.length < 6) {\r\n      setError(\"Password should be at least 6 characters\");\r\n    } else {\r\n      try {\r\n        let data;\r\n        if (newAccount) {\r\n          //create Account\r\n          data = await authService.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n        } else {\r\n          data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Log in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, userObj, isOwner }) => {\r\n  const nowTime = Date.now();\r\n  const nowTime1 = new Date();\r\n  const now = {\r\n    year: nowTime1.getFullYear(),\r\n    month: nowTime1.getMonth() + 1,\r\n    date: nowTime1.getDate(),\r\n    hour: nowTime1.getHours(),\r\n  };\r\n  const a = parseInt((nowTime - nweetObj.createdAt) / (60 * 1000));\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      //delete nweet. firebase는 폴더처럼 되어있음\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      //사진 삭제. url에서 reference를 찾는 법. storage에서 삭제\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(nweetObj, newNweet);\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  value={newNweet}\r\n                  placeholder=\"Edit your nweet\"\r\n                  onChange={onChange}\r\n                  required\r\n                  autoFocus\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3>\r\n            {nweetObj.displayName}\r\n            <span className=\"nweet_Me\">{isOwner && ` Me`}</span>\r\n            <span className=\"nweet_time\">\r\n              {a > 60 * 24 * 7 /*일주일 넘으면? */ ? (\r\n                `${nweetObj.Time.year} . ${nweetObj.Time.month} . ${nweetObj.Time.date} .`\r\n              ) : a >= 60 * 24 /*하루 지나면? */ ? (\r\n                `${parseInt(a / (60 * 24))} days`\r\n              ) : parseInt(a / 60) !== 0 ? (\r\n                `${parseInt(a / 60)} hrs`\r\n              ) : (\r\n                <>{a === 0 ? \"just now\" : `${a} mins`}</>\r\n              )}\r\n            </span>\r\n          </h3>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              alt={nweetObj.attachmentUrl}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                console.log(\"hi\");\r\n                window.open(nweetObj.attachmentUrl);\r\n              }}\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    //파일목록 확인\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    //url 읽기\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (theFile) {\r\n      reader.readAsDataURL(theFile);\r\n      console.log(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  //promise를 리턴하므로 async,await 써주자.\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n      //db로 nweet값 보내주기\r\n    }\r\n    var now = new Date();\r\n    console.log(now);\r\n    const Sendnweet = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      Time: {\r\n        year: now.getFullYear(),\r\n        month: now.getMonth() + 1,\r\n        date: now.getDate(),\r\n        hour: now.getHours(),\r\n        minutes: now.getMinutes(),\r\n      },\r\n      creatorId: userObj.uid,\r\n      displayName: userObj.displayName,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(Sendnweet);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      ></input>\r\n      <br />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  //db에 있는 nweet가져오기\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  //query말고 snapshot을 사용해서 db로부터 실시간으로 확인하자\r\n  useEffect(() => {\r\n    //getNweets(); => query\r\n    //db가 delete,update될때마다 알려줌. re-render하지 않아도됨\r\n    //getNweets은 처음 render될때만 실행되었다\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray.reverse());\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            userObj={userObj}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    //redirect하는 방법\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .get()\r\n        .then(function (querySnapshot) {\r\n          querySnapshot.forEach(function (doc) {\r\n            return dbService\r\n              .collection(\"nweets\")\r\n              .doc(doc.id)\r\n              .update({ displayName: newDisplayName })\r\n              .then(function () {})\r\n              .catch(function (error) {\r\n                console.error(\"Error updating document: \", error);\r\n              });\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"Error getting documents: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  var a = window.location.href.indexOf(\"/profile\") !== -1 ? true : false;\r\n  const [pfile, setPfile] = useState(a);\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            style={{ marginRight: 10 }}\r\n            onClick={() => setPfile(false)}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            onClick={() => setPfile(true)}\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faUser}\r\n              color={pfile ? \"tomato\" : \"#04AAFF\"}\r\n              size=\"2x\"\r\n            />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && userObj && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn && userObj ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n            {/*route에 있는 경로가 아닌 다른 경로로 가면 /로 redirect하라 */}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n//jsconfig로 import 현재위치를 src안으로 만들어줌\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setISLoggedIn] = useState(false);\n  //user에 관한 정보 저장\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //firebase의 Auth에 user가 있는지 검사\n      if (user) {\n        setISLoggedIn(true);\n        //user 저장\n        //작은 object를 가져와서 수정해야 리렌더링이 된다.\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        setISLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    //userObj 업데이트\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer className=\"footer\">\n        &copy; {new Date().getFullYear()} Nwitter\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}